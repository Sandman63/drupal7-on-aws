{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Drupal 7 High-Availibility Stack",
  "Parameters": {
    "KeyPairName": {
      "Description": "The key pair name to connect to the instances",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Default": "CloudFormationKeyPair"
    },
    "VpcCidrBlock": {
      "Description": "The CIDR range of the VPC",
      "Type": "String",
      "Default": "10.42.0.0/16"
    },
    "PublicSubnets": {
      "Description": "The CIDR ranges of the public subnets",
      "Type": "CommaDelimitedList",
      "Default": "10.42.10.0/24, 10.42.11.0/24"
    },
    "PrivateSubnets": {
      "Description": "The CIDR ranges of the private subnets",
      "Type": "CommaDelimitedList",
      "Default": "10.42.20.0/24, 10.42.21.0/24"
    }
  },
  "Mappings": {
    "AmazonMachineImages": {
      "eu-west-1": {
        "AmazonLinux": "ami-b0ac25c3",
        "Description": "Amazon Linux AMI 2016.03.1 (HVM), SSD Volume Type"
      }
    }
  },
  "Resources": {

    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "CidrBlock": { "Ref": "VpcCidrBlock" },
        "Tags": [{
          "Key": "Name",
          "Value": "Drupal 7 stack VPC"
        }]
      }
    },


    "PublicSubnetOne": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "MapPublicIpOnLaunch": true,
        "CidrBlock": { "Fn::Select" : [ "0", {"Ref" : "PublicSubnets"} ] },
        "AvailabilityZone": {
          "Fn::Select": [ "0", { "Fn::GetAZs": { "Ref": "AWS::Region" } } ] },
        "Tags": [{
          "Key": "Name",
          "Value": "Public Subnet #1"
        }]
      }
    },
    "PublicSubnetTwo": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "MapPublicIpOnLaunch": true,
        "CidrBlock": { "Fn::Select" : [ "1", {"Ref" : "PublicSubnets"} ] },
        "AvailabilityZone": {
          "Fn::Select": [ "1", { "Fn::GetAZs": { "Ref": "AWS::Region" } } ] },
        "Tags": [{
          "Key": "Name",
          "Value": "Public Subnet #2"
        }]
      }
    },

    "PrivateSubnetOne": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "MapPublicIpOnLaunch": true,
        "CidrBlock": { "Fn::Select" : [ "0", {"Ref" : "PrivateSubnets"} ] },
        "AvailabilityZone": {
          "Fn::Select": [ "0", { "Fn::GetAZs": { "Ref": "AWS::Region" } } ] },
        "Tags": [{
          "Key": "Name",
          "Value": "Private Subnet #1"
        }]
      }
    },
    "PrivateSubnetTwo": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "MapPublicIpOnLaunch": true,
        "CidrBlock": { "Fn::Select" : [ "1", {"Ref" : "PrivateSubnets"} ] },
        "AvailabilityZone": {
          "Fn::Select": [ "1", { "Fn::GetAZs": { "Ref": "AWS::Region" } } ] },
        "Tags": [{
          "Key": "Name",
          "Value": "Private Subnet #2"
        }]
      }
    },


    "PublicSubnetOneRouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "PublicSubnetOne" },
        "RouteTableId": { "Ref": "PublicRouteTable" }
      }
    },
    "PublicSubnetTwoRouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "PublicSubnetTwo" },
        "RouteTableId": { "Ref": "PublicRouteTable" }
      }
    },

    "PrivateSubnetOneRouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "PrivateSubnetOne" },
        "RouteTableId": { "Ref": "PrivateRouteTableOne" }
      }
    },
    "PrivateSubnetTwoRouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "PrivateSubnetTwo" },
        "RouteTableId": { "Ref": "PrivateRouteTableTwo" }
      }
    },


    "PrivateRouteToInternetOne": {
      "DependsOn": [ "PrivateRouteTableOne", "NATGatewayOne" ],
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": { "Ref": "PrivateRouteTableOne" },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": { "Ref": "NATGatewayOne" }
      }
    },
    "PrivateRouteToInternetTwo": {
      "DependsOn": [ "PrivateRouteTableTwo", "NATGatewayTwo" ],
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": { "Ref": "PrivateRouteTableTwo" },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": { "Ref": "NATGatewayTwo" }
      }
    },


    "PrivateRouteTableOne": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": { "VpcId": { "Ref": "VPC" } }
    },
    "PrivateRouteTableTwo": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": { "VpcId": { "Ref": "VPC" } }
    },


    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway"
    },
    "VPCGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "InternetGatewayId": { "Ref": "InternetGateway" }
      }
    },

    "PublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": { "VpcId": { "Ref": "VPC" } }
    },
    "PublicRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": { "Ref": "PublicRouteTable" },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": { "Ref": "InternetGateway" }
      }
    },

    "NATGatewayOne": {
      "DependsOn": "InternetGateway",
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": { "Fn::GetAtt": [ "ElasticIPOne", "AllocationId" ] },
        "SubnetId": { "Fn::Select" : [ "0", {"Ref" : "PublicSubnets"} ] }
      }
    },
    "ElasticIPOne": {
      "Type": "AWS::EC2::EIP",
      "Properties": { "Domain": "vpc" }
    },

    "NATGatewayTwo": {
      "DependsOn": "InternetGateway",
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": { "Fn::GetAtt": [ "ElasticIPTwo", "AllocationId"] },
        "SubnetId": { "Fn::Select" : [ "1", {"Ref" : "PublicSubnets"} ] }
      }
    },
    "ElasticIPTwo": {
      "Type": "AWS::EC2::EIP",
      "Properties": { "Domain": "vpc" }
    }
  }
}
